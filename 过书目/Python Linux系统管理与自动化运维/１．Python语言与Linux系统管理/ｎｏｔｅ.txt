


可以使用python编写脚本管理linux,包括如何使用Python构建命令行工具，
如何使用Python处理文本问题，如何使用Python进行系统管理，如何使用Python
监控linux系统，以及如何使用python处理文档于报告


网络嗅探工具:scrapy
自动化部署工具：Fabric
自动部署工具：Ansible


第１章　python语言于linux系统管理

１．３python的缺点：

１．python的执行速度不快

在python的执行速度上，一方面，网络或磁盘的延迟会抵消部分python本身消耗的时间；
另一方面，因为python特别容易和Ｃ结合使用，所以我们可以通过分离一部分需要优化速度的应用
将其转换为编译好的扩展，并在整个系统中使用python脚本将这部分应用连接起来，
以提高程序的整体效率

２．python的ＧＩＬ锁限制并发：对多处理器支持不好。
GIL：是指python全局解释器锁(Global Interperter Lock),
当python的默认解释器要执行字节码时，都需要先申请整个锁，这意味着，
如果试图通过多线程扩展应用程序，将总是被这个全局解释器锁限制，
当然，我们可以使用多进程的架构来提高程序的并发，也可以选择不同的python实现来运行我们的程序

３．　python２与python3不兼容

１．４　python语言的应用场景

1.web开发
２．用户图形接口(GUI)
3.数值计算和科学计算
４．系统管理
开源云计算平台OpenStack就是用python开发的
自动化部署工具：Ansible,Salt


５．其他

开发游戏：pygame
处理图片：PIL
自然语言分析：NLIK


1.5为什么Ｐｙｔｈｏｎ适合linux系统管理

１．python相对于shell脚本，更清晰易懂
２．python表达力强，容易扩展，支持多线程，shellb不支持
３．可以跨平台
python标准库对于操作系统的接口进行了封装，
python标准库绑定了POSIX以及其他常规操作工具，如环境变量，文件，套接字，管道
进程，多线程，正则表达式，命令行参数，shell命令启动器，文件名扩展等

４．python语言可以方便地于操作系统集成
５．许多开源的项目对linux系统提供了支持
６．

Ｆabric,Ansible,SaltStack